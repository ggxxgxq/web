{"remainingRequest":"/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/src/views/message/Message.vue?vue&type=style&index=0&id=8d2d3196&lang=less&scoped=true","dependencies":[{"path":"/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/src/views/message/Message.vue","mtime":1712587400027},{"path":"/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/node_modules/css-loader/index.js","mtime":1712590522695},{"path":"/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1712590523760},{"path":"/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/node_modules/postcss-loader/src/index.js","mtime":1712590523260},{"path":"/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/node_modules/less-loader/dist/cjs.js","mtime":1712590524064},{"path":"/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/node_modules/cache-loader/dist/cjs.js","mtime":1712590523146},{"path":"/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/node_modules/vue-loader/lib/index.js","mtime":1712590523434}],"contextDependencies":[],"result":["\n.container {\n  width: 1140px;\n  margin: 40px auto 0;\n  padding: 5px;\n\n  .ivu-col {\n    padding: 5px;\n  }\n\n  .card {\n    height: 720px;\n  }\n\n  .friend-list-container {\n    height: 625px;\n    overflow: auto;\n\n    .items {\n      .item {\n        cursor: pointer;\n        margin-bottom: 5px;\n        padding: 2px;\n        border-radius: 30px;\n\n        .image {\n          width: 60px;\n          height: 60px;\n        }\n\n        .meta {\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n      }\n\n      .item:hover,\n      .item.active {\n        background: #eeeeee;\n      }\n    }\n  }\n\n  .message-list-container {\n    .current-friend {\n      height: 20px;\n      padding: 0 10px;\n\n      p {\n        position: relative;\n        top: -5px;\n        color: #666;\n      }\n    }\n\n    .message-list {\n      height: 480px;\n      margin-bottom: 15px;\n      padding: 10px;\n      overflow: auto;\n\n      .time {\n        text-align: center;\n        font-size: 12px;\n        color: #666666;\n        margin-bottom: 10px;\n      }\n\n      .bubble-wrapper {\n        clear: right;\n        margin-bottom: 20px;\n        overflow: auto;\n\n        .bubble {\n          display: inline-block;\n          max-width: 65%;\n          padding: 9px 14px;\n          border-radius: 20px;\n          font-size: 14px;\n          line-height: 24px;\n        }\n\n        .left-bubble {\n          float: left;\n          background: #fdfdfd;\n          border: 1px solid rgba(0, 0, 0, 0.05);\n          border-top-left-radius: 0;\n        }\n\n        .right-bubble {\n          float: right;\n          color: #fff;\n          background-color: #3FD1E1;\n          border-bottom-right-radius: 0;\n        }\n      }\n    }\n\n    .message-input {\n      textarea {\n        resize: none;\n        height: 100%;\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Message.vue"],"names":[],"mappings":";AA4OA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Message.vue","sourceRoot":"src/views/message","sourcesContent":["<template>\n  <div class=\"container\">\n    <Row>\n      <iCol>\n        <sui-card class=\"fluid\">\n          <sui-message attached=\"top\">消息中心</sui-message>\n          <sui-card-content>\n            <Row>\n              <iCol span=\"7\">\n                <!-- 好友列表 -->\n                <div class=\"friend-list-container\">\n                  <sui-item-group v-if=\"friendList.length > 0\">\n                    <!-- 好友列表 -->\n                    <sui-item v-for=\"friend in friendList\"\n                              :key=\"friend.id\"\n                              :class=\"{active: currentFriend === friend}\"\n                              @click.native=\"selectFriend(friend)\">\n                      <sui-image circular :src=\"friend.avatar\"/>\n                      <sui-item-content>\n                        <sui-item-description>{{friend.nickname}}\n                          <Badge :count=\"friend.unread\"/>\n                        </sui-item-description>\n                        <!-- 显示当前好友最新信息 -->\n                        <sui-item-meta>{{lastMessage(friend)}}</sui-item-meta>\n                      </sui-item-content>\n                    </sui-item>\n                  </sui-item-group>\n                  <span v-else>暂无好友</span>\n                </div>\n                <!-- 好友列表 END -->\n              </iCol>\n              <iCol span=\"17\">\n                <!-- 聊天框 -->\n                <div v-if=\"currentFriend\" class=\"message-list-container\">\n                  <!-- 聊天用户 -->\n                  <div class=\"current-friend\">\n                    <p>和 {{currentFriend.nickname}} 聊天中...</p>\n                  </div>\n                  <!-- 聊天用户 END -->\n                  <!-- 消息列表 -->\n                  <div ref=\"messageList\" class=\"message-list\">\n                    <!--<div class=\"time\">7分钟前</div>-->\n                    <template v-for=\"message in currentMessageList\">\n                      <!-- 发送的消息 -->\n                      <div class=\"bubble-wrapper\" v-if=\"message.sendUserId === user.id\">\n                        <div class=\"bubble right-bubble\" v-html=\"message.content\"/>\n                      </div>\n                      <!-- 接收的消息 -->\n                      <div class=\"bubble-wrapper\" v-if=\"message.receiveUserId === user.id\">\n                        <div class=\"bubble left-bubble\" v-html=\"message.content\"/>\n                      </div>\n                    </template>\n                  </div>\n                  <!-- 消息列表 END -->\n                  <!-- 输入框 -->\n                  <sui-form class=\"message-input\">\n                    <sui-form-field>\n                      <textarea placeholder=\"输入消息\" v-model=\"message\" rows=\"3\" @keydown.ctrl.enter=\"chat\"/>\n                    </sui-form-field>\n                    <sui-form-field>\n                      <sui-button basic floated=\"right\" content=\"发送(Ctrl+Enter)\" @click.prevent=\"chat\"/>\n                    </sui-form-field>\n                  </sui-form>\n                  <!-- 输入框 END -->\n                </div>\n                <!-- 提示框 -->\n                <div v-else>\n                  <sui-message>\n                    <sui-message-header>\n                      <sui-icon name=\"bell outline\"/>\n                      这里是消息中心\n                    </sui-message-header>\n                    <p>在这里，你可以接收到系统发送的消息。你也可以发送消息联系你的好友或是校友，快来开启愉快的聊天之旅吧 🤗</p>\n                  </sui-message>\n                </div>\n                <!-- 提示框 END -->\n                <!-- 聊天框 END -->\n              </iCol>\n            </Row>\n          </sui-card-content>\n        </sui-card>\n      </iCol>\n    </Row>\n  </div>\n</template>\n\n<script>\nimport storage from '@/utils/storage'\n\nexport default {\n  name: 'Message',\n  data() {\n    return {\n      message: '',\n      user: this.$store.state.user,\n      currentFriend: null,\n      currentMessageList: [],\n      webSocket: null,\n      friendList: [],\n      // 消息类型\n      messageType: {\n        CONNECT: 0,\n        CHAT: 1,\n        SIGNED: 2,\n        KEEP_ALIVE: 3\n      }\n    }\n  },\n  methods: {\n    // 切换好友\n    selectFriend(friend) {\n      this.currentFriend = friend;\n      this.currentMessageList = friend.messageList;\n      this.currentFriend.unread = 0;\n    },\n    // 获取好友\n    getFriendList() {\n      this.$axios.get('/api/friend')\n        .then(res => {\n          let result = res.data;\n          // 获取好友\n          this.friendList = result.data;\n          // 获取历史消息\n          this.friendList.forEach(friend => {\n            friend.unread = 0;\n            friend.messageList = this.getMessageList(friend.id);\n          });\n          // 建立连接\n          this.connectWebSocketServer();\n        });\n    },\n    // 获取消息列表\n    getMessageList(friendId) {\n      let messageList = storage.get(`${this.user.id}-${friendId}`);\n      return messageList != null ? messageList : [];\n    },\n    // 存储消息列表\n    saveMessageList(friendId, message) {\n      let messageList = this.getMessageList(friendId);\n      messageList.push(message);\n      storage.set(`${this.user.id}-${friendId}`, messageList);\n    },\n    // 连接 WebSocket 服务器\n    connectWebSocketServer() {\n      // 获取 WebSocket Server URL\n      this.$axios.get('/api/sys/ws')\n        .then(res => this.initWebSocket(res.data));\n    },\n    // 初始化 WebSocket 并连接\n    initWebSocket(url) {\n      this.webSocket = new WebSocket(url);\n      // 建立连接\n      this.webSocket.onopen = event => {\n        console.log('ws.onopen: ', event);\n        this.connect();\n        setInterval(this.keepAlive, 30 * 1000);\n      };\n      // 接收消息\n      this.webSocket.onmessage = event => {\n        console.log('ws.onmessage: ', event);\n        let message = JSON.parse(event.data);\n        // 根据 sendUserId 和 receiveUserId，将消息放入对应 friend 下的 messageList 中\n        this.friendList.forEach(friend => {\n          if (message.sendUserId === friend.id || message.receiveUserId === friend.id) {\n            friend.messageList.push(message);\n            // 保存消息\n            this.saveMessageList(friend.id, message);\n            if (friend !== this.currentFriend) {\n              this.$set(friend, 'unread', friend.unread + 1);\n            }\n          }\n        });\n        // 签收消息\n        this.signed(message.id);\n      };\n      // 关闭连接\n      this.webSocket.onclose = event => console.log('ws.onclose: ', event);\n      // 发生异常\n      this.webSocket.onerror = event => console.log('ws.onerror: ', event);\n    },\n    // 连接\n    connect() {\n      let connectMessage = { type: this.messageType.CONNECT, sendUserId: this.user.id };\n      this.send(connectMessage);\n    },\n    // 心跳包\n    keepAlive() {\n      let keepAliveMessage = { type: this.messageType.KEEP_ALIVE };\n      this.send(keepAliveMessage);\n    },\n    // 聊天消息\n    chat() {\n      let chatMessage = {\n        type: this.messageType.CHAT,\n        sendUserId: this.user.id,\n        receiveUserId: this.currentFriend.id,\n        content: this.message\n      };\n      this.currentMessageList.push(chatMessage);\n      this.send(chatMessage);\n      this.saveMessageList(this.currentFriend.id, chatMessage);\n      this.message = '';\n    },\n    // 签收消息\n    signed(id) {\n      let signedMessage = { type: this.messageType.SIGNED, content: id };\n      this.send(signedMessage);\n    },\n    // 发送消息\n    send(message) {\n      console.log('send: ', JSON.stringify(message));\n      this.webSocket.send(JSON.stringify(message));\n    },\n    // 获取最后一条消息\n    lastMessage(friend) {\n      let len = friend.messageList.length;\n      return len > 0 ? friend.messageList[len - 1].content : '暂无消息';\n    }\n  },\n  watch: {\n    currentMessageList() {\n      this.$nextTick(() => {\n        let messageList = this.$refs.messageList;\n        messageList.scrollTop = messageList.scrollHeight;\n      })\n    }\n  },\n  mounted() {\n    // 获取好友列表\n    this.getFriendList();\n  }\n}\n\n</script>\n\n<style lang=\"less\" scoped>\n.container {\n  width: 1140px;\n  margin: 40px auto 0;\n  padding: 5px;\n\n  .ivu-col {\n    padding: 5px;\n  }\n\n  .card {\n    height: 720px;\n  }\n\n  .friend-list-container {\n    height: 625px;\n    overflow: auto;\n\n    .items {\n      .item {\n        cursor: pointer;\n        margin-bottom: 5px;\n        padding: 2px;\n        border-radius: 30px;\n\n        .image {\n          width: 60px;\n          height: 60px;\n        }\n\n        .meta {\n          white-space: nowrap;\n          overflow: hidden;\n          text-overflow: ellipsis;\n        }\n      }\n\n      .item:hover,\n      .item.active {\n        background: #eeeeee;\n      }\n    }\n  }\n\n  .message-list-container {\n    .current-friend {\n      height: 20px;\n      padding: 0 10px;\n\n      p {\n        position: relative;\n        top: -5px;\n        color: #666;\n      }\n    }\n\n    .message-list {\n      height: 480px;\n      margin-bottom: 15px;\n      padding: 10px;\n      overflow: auto;\n\n      .time {\n        text-align: center;\n        font-size: 12px;\n        color: #666666;\n        margin-bottom: 10px;\n      }\n\n      .bubble-wrapper {\n        clear: right;\n        margin-bottom: 20px;\n        overflow: auto;\n\n        .bubble {\n          display: inline-block;\n          max-width: 65%;\n          padding: 9px 14px;\n          border-radius: 20px;\n          font-size: 14px;\n          line-height: 24px;\n        }\n\n        .left-bubble {\n          float: left;\n          background: #fdfdfd;\n          border: 1px solid rgba(0, 0, 0, 0.05);\n          border-top-left-radius: 0;\n        }\n\n        .right-bubble {\n          float: right;\n          color: #fff;\n          background-color: #3FD1E1;\n          border-bottom-right-radius: 0;\n        }\n      }\n    }\n\n    .message-input {\n      textarea {\n        resize: none;\n        height: 100%;\n      }\n    }\n  }\n}\n</style>\n"]}]}