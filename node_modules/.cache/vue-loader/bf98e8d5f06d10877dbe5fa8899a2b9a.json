{"remainingRequest":"/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/src/components/common/ImageUploader.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/src/components/common/ImageUploader.vue","mtime":1712587400024},{"path":"/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/node_modules/cache-loader/dist/cjs.js","mtime":1712590523146},{"path":"/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/node_modules/babel-loader/lib/index.js","mtime":1712590523266},{"path":"/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/node_modules/cache-loader/dist/cjs.js","mtime":1712590523146},{"path":"/Users/gaoxiangqing/Documents/gaoxiangqing/smilcool/smilcool-client/node_modules/vue-loader/lib/index.js","mtime":1712590523434}],"contextDependencies":[],"result":["\nexport default {\n  name: 'ImageUploader',\n  data() {\n    return {\n      // 已上传文件\n      fileList: [],\n      // 上传地址\n      localStorage: '/api/local-storage/upload',\n      // 上传时额外附带参数\n      data: {\n        type: 'img'\n      },\n      // 图片预览 Modal 参数\n      showImgModal: {\n        visible: false,\n        url: ''\n      }\n    }\n  },\n  methods: {\n    // 预览图片\n    handleView(url1) {\n      this.showImgModal.url = url1;\n      this.showImgModal.visible = true;\n    },\n    // 删除图片\n    handleRemove(file) {\n      const fileList = this.$refs.upload.fileList;\n      this.$refs.upload.fileList.splice(fileList.indexOf(file), 1);\n      this.updateImages(fileList);\n    },\n    // 图片格式错误\n    handleFormatError(file) {\n      this.$Notice.warning({\n        title: '文件格式错误',\n        desc: file.name + ' 不是 jpg、jpeg 或 png 格式的图片'\n      });\n    },\n    // 上传成功\n    handleSuccess(res, file, fileList) {\n      let uploadInfo = res.data;\n      file.url = uploadInfo.url;\n      // 因为异步问题，不能直接 watch uploadList (fileList 改变时，还未从后端获取结果)\n      // 这里主动调用，通知父组件更新 images\n      this.updateImages(fileList);\n    },\n    // 上传失败\n    handleError(err, res, file) {\n      this.$Notice.error({\n        title: 'Oops',\n        desc: file.name + ' 上传失败'\n      });\n    },\n    // 触发 images-change 事件，用于更新 images\n    updateImages(uploadList) {\n      let images = uploadList.map(item => item.url);\n      this.$emit('images-change', images);\n    },\n    // 用于清楚图片列表\n    clearImages() {\n      this.$refs.upload.clearFiles();\n      this.fileList = [];\n    }\n  },\n  mounted() {\n    // 保留上传文件列表的引用\n    this.fileList = this.$refs.upload.fileList;\n  }\n}\n",{"version":3,"sources":["ImageUploader.vue"],"names":[],"mappings":";AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ImageUploader.vue","sourceRoot":"src/components/common","sourcesContent":["<template>\n  <div>\n    <!-- 上传图片列表 -->\n    <div class=\"upload-list\" v-for=\"item in fileList\">\n      <!-- 上传成功 -->\n      <template v-if=\"item.status === 'finished'\">\n        <img :src=\"item.url\">\n        <div class=\"upload-list-cover\">\n          <!-- 预览 -->\n          <Icon type=\"ios-eye-outline\" @click.native=\"handleView(item.url)\"></Icon>\n          <!-- 删除 -->\n          <Icon type=\"ios-trash-outline\" @click.native=\"handleRemove(item)\"></Icon>\n        </div>\n      </template>\n      <!-- 上传中 -->\n      <template v-else>\n        <Progress v-if=\"item.showProgress\" :percent=\"item.percentage\" hide-info></Progress>\n      </template>\n    </div>\n    <!-- 上传图片列表 END -->\n    <!-- 图片上传 -->\n    <Upload class=\"upload\" ref=\"upload\"\n            :action=\"localStorage\"\n            :data=\"data\"\n            :show-upload-list=\"false\"\n            :format=\"['jpg','jpeg','png']\"\n            :on-format-error=\"handleFormatError\"\n            :on-success=\"handleSuccess\"\n            :on-error=\"handleError\"\n            multiple\n            type=\"drag\">\n      <Icon type=\"ios-camera\" size=\"20\"></Icon>\n    </Upload>\n    <!-- 图片上传 END -->\n    <!-- 图片预览 Modal -->\n    <Modal v-model=\"showImgModal.visible\" footer-hide :closable=\"false\">\n      <img :src=\"showImgModal.url\" style=\"width: 100%\">\n    </Modal>\n    <!-- 图片预览 Modal END -->\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ImageUploader',\n  data() {\n    return {\n      // 已上传文件\n      fileList: [],\n      // 上传地址\n      localStorage: '/api/local-storage/upload',\n      // 上传时额外附带参数\n      data: {\n        type: 'img'\n      },\n      // 图片预览 Modal 参数\n      showImgModal: {\n        visible: false,\n        url: ''\n      }\n    }\n  },\n  methods: {\n    // 预览图片\n    handleView(url1) {\n      this.showImgModal.url = url1;\n      this.showImgModal.visible = true;\n    },\n    // 删除图片\n    handleRemove(file) {\n      const fileList = this.$refs.upload.fileList;\n      this.$refs.upload.fileList.splice(fileList.indexOf(file), 1);\n      this.updateImages(fileList);\n    },\n    // 图片格式错误\n    handleFormatError(file) {\n      this.$Notice.warning({\n        title: '文件格式错误',\n        desc: file.name + ' 不是 jpg、jpeg 或 png 格式的图片'\n      });\n    },\n    // 上传成功\n    handleSuccess(res, file, fileList) {\n      let uploadInfo = res.data;\n      file.url = uploadInfo.url;\n      // 因为异步问题，不能直接 watch uploadList (fileList 改变时，还未从后端获取结果)\n      // 这里主动调用，通知父组件更新 images\n      this.updateImages(fileList);\n    },\n    // 上传失败\n    handleError(err, res, file) {\n      this.$Notice.error({\n        title: 'Oops',\n        desc: file.name + ' 上传失败'\n      });\n    },\n    // 触发 images-change 事件，用于更新 images\n    updateImages(uploadList) {\n      let images = uploadList.map(item => item.url);\n      this.$emit('images-change', images);\n    },\n    // 用于清楚图片列表\n    clearImages() {\n      this.$refs.upload.clearFiles();\n      this.fileList = [];\n    }\n  },\n  mounted() {\n    // 保留上传文件列表的引用\n    this.fileList = this.$refs.upload.fileList;\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.upload {\n  display: inline-block;\n  width: 58px;\n\n  i {\n    width: 58px;\n    height: 58px;\n    line-height: 58px;\n  }\n}\n\n.upload-list {\n  display: inline-block;\n  width: 60px;\n  height: 60px;\n  text-align: center;\n  line-height: 60px;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  overflow: hidden;\n  background: #fff;\n  position: relative;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, .2);\n  margin-right: 4px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n\n  .upload-list-cover {\n    display: none;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: rgba(0, 0, 0, .6);\n\n    i {\n      color: #fff;\n      font-size: 20px;\n      cursor: pointer;\n      margin: 0 2px;\n    }\n  }\n}\n\n.upload-list:hover .upload-list-cover {\n  display: block;\n}\n</style>\n"]}]}